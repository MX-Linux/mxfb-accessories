#!/bin/bash

##This app was developed by MX Devs xxx 2023 and released under GPLv3

# version 230514-01

#TEXTDOMAINDIR=/usr/share/locale 
#export TEXTDOMAIN="mxfb-font"
#source gettext.sh

STYLE="$(grep 'session.styleFile:' $HOME/.fluxbox/init | sed -e "s/session\.styleFile\://")"

STYLE_MENU_FRAME="$(grep 'menu.frame.font:' $STYLE/theme.cfg | sed -e "s/menu\.frame\.font\://")"
STYLE_MENU_TITLE="$(grep 'menu.title.font:' $STYLE/theme.cfg | sed -e "s/menu\.title\.font\://")"
STYLE_WINDOW_TITLE="$(grep 'window.font:' $STYLE/theme.cfg | sed -e "s/window\.font\://")"

WINDOW_TITLE_NOW="$(grep "#window.font: " $HOME/.fluxbox/overlay)"
MENU_TITLE_NOW="$(grep "#menu.title.font: " $HOME/.fluxbox/overlay)"
MENU_FRAME_NOW="$(grep "#menu.frame.font: " $HOME/.fluxbox/overlay)"


if [ -z "$WINDOW_TITLE_NOW" ]; then
    WINDOW_TITLE_OVERRIDE=true
    WINDOW_TITLE_NOW="$(grep "window.font: " $HOME/.fluxbox/overlay | sed -e "s/window\.font\://" | sed -e "s/-/ /g")"
else
    WINDOW_TITLE_OVERRIDE=false
fi

if [ -z "$MENU_TITLE_NOW" ]; then
    MENU_TITLE_OVERRIDE=true
    MENU_TITLE_NOW="$(grep "menu.title.font: " $HOME/.fluxbox/overlay | sed -e "s/window\.font\://" | sed -e "s/-/ /g")"
else
    MENU_TITLE_OVERRIDE=false
fi

if [ -z "$MENU_FRAME_NOW" ]; then
    MENU_FRAME_OVERRIDE=true
    MENU_FRAME_NOW="$(grep "menu.frame.font: " $HOME/.fluxbox/overlay | sed -e "s/window\.font\://" | sed -e "s/-/ /g")"
else
    MENU_FRAME_OVERRIDE=false
fi

#gtk-font

GTK_FONT_NOW="$(grep "gtk-font-name" $HOME/.config/gtk-3.0/settings.ini | sed -e "s/gtk-font-name\=//" )"
#GTK2_FONT_NOW="$(grep "gtk-font-name" $HOME/.gtkrc-2.0 | sed -e "s/gtk-font-name\=//" )"

####

TITLE="$(gettext 'MXFB-Font')"
CLASS="mxfb-font"
ICONPATH="/usr/share/icons/mxflux.png"
#helpfile=/usr/share/mxflux/HELP_Windowoverlay

TEXT1="CHANGE FONTS"
TEXT2="Default fonts for Window Title, Menu Title and Menu Text are set in the current fluxbox style"
TEXT3="Select and choose font to override default font"
TEXT4="Unselect to use default font"
TEXT5="Gtk-font applies to window contents and is independent of fluxbox style settings"

MAINPOS=(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=600 --form --columns=1 --align=left --separator="_" --button="gtk-cancel":1 --button="gtk-ok":0 \
--text="<big><b>$TEXT1</b></big>\n$TEXT2\n - $TEXT3\n - $TEXT4\n$TEXT5\n" \
--field="$(gettext 'Window Title Default'):  <b>$STYLE_WINDOW_TITLE</b>":LBL "" \
--field="$(gettext 'Override')":CHK "$WINDOW_TITLE_OVERRIDE" \
--field="$(gettext 'with')":FN "$WINDOW_TITLE_NOW" \
--field=" ":LBL "|" \
--field="$(gettext 'Menu Title Default'):  <b>$STYLE_MENU_TITLE</b>":LBL "" \
--field="$(gettext 'Override')":CHK "$MENU_TITLE_OVERRIDE" \
--field="$(gettext 'with')":FN "$MENU_TITLE_NOW" \
--field=" ":LBL "|" \
--field="$(gettext 'Menu Default'):  <b>$STYLE_MENU_FRAME</b>":LBL "" \
--field="$(gettext 'Override')":CHK "$MENU_FRAME_OVERRIDE" \
--field="$(gettext 'with')":FN "$MENU_FRAME_NOW" \
--field=" ":LBL "|" \
--field="$(gettext 'Gtk Font') :  ":FN "$GTK_FONT_NOW" \
)

RES=$("${MAINPOS[@]}" | sed -e "s/ /-/g" | sed -e "s/_/ /g")

#RES=$("${MAINPOS[@]}")

ret=$?
case $ret in
    1|252) exit # if cancelled or pressed Esc
    ;;
esac

override=($RES)

WINDOW_TITLE_OVERRIDE="${override[0]}"

if [ "$WINDOW_TITLE_OVERRIDE" = FALSE ]; then

    WINDOW_TITLE_NOW="$(grep "#window.font: " $HOME/.fluxbox/overlay)"
        if [ -z "$WINDOW_TITLE_NOW" ]; then
            sed -i 's/^window.font:/#&/' $HOME/.fluxbox/overlay
        fi
fi

if [ "$WINDOW_TITLE_OVERRIDE" = TRUE ]; then
    WINDOW_TITLE_NEW=$(echo "${override[1]}" | sed -e "s/-/ /g")
    window_title_new=($WINDOW_TITLE_NEW)
    WINDOW_TITLE_NEWSIZE="${window_title_new[-1]}"
    unset 'window_title_new[-1]'
    WINDOW_TITLE_NEWTYPE="${window_title_new[-1]}"
    
    echo $WINDOW_TITLE_NEWTYPE

    if [ "$WINDOW_TITLE_NEWTYPE" = "Italic" -o "$WINDOW_TITLE_NEWTYPE" = "Bold" ]; then
        unset 'window_title_new[-1]'
    else
        WINDOW_TITLE_NEWTYPE=Regular
    fi

    WINDOW_TITLE_NEW=$(echo "${window_title_new[@]}")
    WINDOW_TITLE_NEW="window.font: $WINDOW_TITLE_NEW-$WINDOW_TITLE_NEWSIZE:$WINDOW_TITLE_NEWTYPE"
    
    WINDOW_TITLE_NOW="$(grep "window.font: " $HOME/.fluxbox/overlay)"
        
        if [ "$WINDOW_TITLE_NEW" != "$WINDOW_TITLE_NOW" ]; then

            sed -i "s/$WINDOW_TITLE_NOW/$WINDOW_TITLE_NEW/" $HOME/.fluxbox/overlay
    
        fi

fi


###

MENU_TITLE_OVERRIDE="${override[2]}"

if [ "$MENU_TITLE_OVERRIDE" = FALSE ]; then

    MENU_TITLE_NOW="$(grep "#menu.title.font: " $HOME/.fluxbox/overlay)"
        if [ -z "$WINDOW_TITLE_NOW" ]; then
            sed -i 's/^menu.title.font:/#&/' $HOME/.fluxbox/overlay
        fi
fi

if [ "$MENU_TITLE_OVERRIDE" = TRUE ]; then

    MENU_TITLE_NEW=$(echo "${override[3]}" | sed -e "s/-/ /g")
    menu_title_new=($MENU_TITLE_NEW)
    MENU_TITLE_NEWSIZE="${menu_title_new[-1]}"
    unset 'menu_title_new[-1]'
    MENU_TITLE_NEWTYPE="${menu_title_new[-1]}"

     if [ "$MENU_TITLE_NEWTYPE" = "Italic" -o "$MENU_TITLE_NEWTYPE" = "Bold" ]; then
        unset 'menu_title_new[-1]'
    else
        MENU_TITLE_NEWTYPE=Regular
    fi

    MENU_TITLE_NEW=$(echo "${menu_title_new[@]}")
    MENU_TITLE_NEW="menu.title.font: $MENU_TITLE_NEW-$MENU_TITLE_NEWSIZE:$MENU_TITLE_NEWTYPE"
    
    MENU_TITLE_NOW="$(grep "menu.title.font: " $HOME/.fluxbox/overlay)"

    if [ "$MENU_FRAME_NEW" != "$MENU_FRAME_NOW" ]; then

        sed -i "s/$MENU_TITLE_NOW/$MENU_TITLE_NEW/" $HOME/.fluxbox/overlay
    
    fi

fi


###

MENU_FRAME_OVERRIDE="${override[4]}"

if [ "$MENU_FRAME_OVERRIDE" = FALSE ]; then

    MENU_FRAME_NOW="$(grep "#menu.frame.font: " $HOME/.fluxbox/overlay)"
        if [ -z "$WINDOW_FRAME_NOW" ]; then
            sed -i 's/^menu.frame.font:/#&/' $HOME/.fluxbox/overlay
        fi
fi

if [ "$MENU_FRAME_OVERRIDE" = TRUE ]; then

    MENU_FRAME_NEW=$(echo "${override[5]}" | sed -e "s/-/ /g")
    menu_frame_new=($MENU_FRAME_NEW)
    MENU_FRAME_NEWSIZE="${menu_frame_new[-1]}"
    unset 'menu_frame_new[-1]'
    MENU_FRAME_NEWTYPE="${menu_frame_new[-1]}"

    if [ "$MENU_FRAME_NEWTYPE" = "Italic" -o "$MENU_FRAME_NEWTYPE" = "Bold" ]; then
        unset 'menu_frame_new[-1]'
    else
        MENU_FRAME_NEWTYPE=Regular
    fi

    MENU_FRAME_NEW=$(echo "${menu_frame_new[@]}")
    MENU_FRAME_NEW="menu.frame.font: $MENU_FRAME_NEW-$MENU_FRAME_NEWSIZE:$MENU_FRAME_NEWTYPE"
    
    MENU_FRAME_NOW="$(grep "menu.frame.font: " $HOME/.fluxbox/overlay)"
    
    if [ "$MENU_FRAME_NEW" != "$MENU_FRAME_NOW" ]; then

        sed -i "s/$MENU_FRAME_NOW/$MENU_FRAME_NEW/" $HOME/.fluxbox/overlay
    
    fi

fi



#gtk bash

    GTK_FONT_NEW=$(echo "${override[6]}" | sed -e "s/-/ /g")

    if [ "$GTK_FONT_NOW" != "$GTK_FONT_NEW" ]; then

        sed -i "s/$GTK_FONT_NOW/$GTK_FONT_NEW/" $HOME/.config/gtk-3.0/settings.ini
        sed -i "s/$GTK_FONT_NOW/$GTK_FONT_NEW/" $HOME/.gtkrc-2.0

function reload_gtk() {
  theme=$(gsettings get org.gnome.desktop.interface gtk-theme)
  gsettings set org.gnome.desktop.interface gtk-theme ''
  sleep 1
  gsettings set org.gnome.desktop.interface gtk-theme $theme
}

export reload_gtk

reload_gtk

fi

#fluxbox-remote restart
fluxbox-remote reconfigure; fluxbox-remote reloadstyle

exit

